{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\Desktop\\\\WebDev\\\\TriviaMern\\\\client\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const cookies = new Cookies();\n  const cookieData = cookies.get(\"TOKEN\");\n  const [user, setUser] = useState(cookieData.username);\n  const [gameOn, setGameOn] = useState(false);\n  const [message, setMessage] = useState(\"Choose Difficulty:\");\n  const [currentMode, setCurrentMode] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [allChoices, setAllChoices] = useState([]);\n  const [score, setScore] = useState(0);\n  const [correctChoice, setCorrectChoice] = useState(\"\");\n  const getQuestion = async mode => {\n    axios.get(`https://the-trivia-api.com/api/questions?limit=1&difficulty=${mode}`).then(res => {\n      const question = res.data[0].question;\n      let allChoices = [];\n      for (const choice of res.data[0].incorrectAnswers) {\n        allChoices.push(choice);\n      }\n      const correctChoice = res.data[0].correctAnswer;\n      allChoices.push(correctChoice);\n      for (let i = allChoices.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = allChoices[i];\n        allChoices[i] = allChoices[j];\n        allChoices[j] = temp;\n      }\n      ;\n      setCurrentQuestion(question);\n      setAllChoices(allChoices);\n      setCorrectChoice(correctChoice);\n    }).catch(err => console.error(err));\n  };\n  const submitAnswer = answer => {\n    if (answer === correctChoice) {\n      switch (currentMode) {\n        case \"easy\":\n          setScore(score + 1);\n          break;\n        case \"medium\":\n          setScore(score + 2);\n          ;\n          break;\n        case \"hard\":\n          setScore(score + 4);\n          ;\n          break;\n      }\n      getQuestion(currentMode);\n    } else {\n      gameOver(user, score);\n    }\n  };\n  const gameOver = (username, score) => {\n    axios.post(\"http://localhost:4000/api/player\", {\n      username: username,\n      newScore: score\n    });\n    setScore(0);\n    setGameOn(false);\n    setMessage(\"Game Over! Play again?\");\n    setCurrentMode(\"\");\n    setCurrentQuestion(\"\");\n    setAllChoices([]);\n    setCorrectChoice(\"\");\n  };\n  const chooseMode = mode => {\n    setCurrentMode(mode);\n    getQuestion(mode);\n    setGameOn(true);\n    setMessage(\"\");\n  };\n  const Modes = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chooseMode\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modeButton\",\n      onClick: () => chooseMode(\"easy\"),\n      children: \"Easy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modeButton\",\n      onClick: () => chooseMode(\"medium\"),\n      children: \"Medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"modeButton\",\n      onClick: () => chooseMode(\"hard\"),\n      children: \"Hard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 25\n  }, this);\n  const Scoreboard = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scoreboard\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 30\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), !gameOn ? /*#__PURE__*/_jsxDEV(Modes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }, this) : null, gameOn ? /*#__PURE__*/_jsxDEV(Scoreboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allChoices.map(choice => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitAnswer(choice),\n          children: choice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"HvmZH0g977JFWA/2BaOj9I2Tfeg=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["axios","Navigate","useState","Cookies","Game","cookies","cookieData","get","user","setUser","username","gameOn","setGameOn","message","setMessage","currentMode","setCurrentMode","currentQuestion","setCurrentQuestion","allChoices","setAllChoices","score","setScore","correctChoice","setCorrectChoice","getQuestion","mode","then","res","question","data","choice","incorrectAnswers","push","correctAnswer","i","length","j","Math","floor","random","temp","catch","err","console","error","submitAnswer","answer","gameOver","post","newScore","chooseMode","Modes","Scoreboard","map"],"sources":["C:/Users/Sean/Desktop/WebDev/TriviaMern/client/src/components/Game.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nfunction Game () {\r\n    const cookies = new Cookies();\r\n    const cookieData = cookies.get(\"TOKEN\");\r\n    const [user, setUser] = useState(cookieData.username);\r\n    const [gameOn, setGameOn] = useState(false);\r\n    const [message, setMessage] = useState(\"Choose Difficulty:\");\r\n    const [currentMode, setCurrentMode] = useState(\"\");\r\n    const [currentQuestion, setCurrentQuestion] = useState(\"\");\r\n    const [allChoices, setAllChoices] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [correctChoice, setCorrectChoice] = useState(\"\");\r\n\r\n    const getQuestion = async(mode) => {\r\n        axios.get(`https://the-trivia-api.com/api/questions?limit=1&difficulty=${mode}`)\r\n        .then(res => {\r\n           const question = res.data[0].question;\r\n           let allChoices = [];\r\n           for (const choice of res.data[0].incorrectAnswers) {\r\n               allChoices.push(choice);\r\n           }\r\n           const correctChoice = res.data[0].correctAnswer;\r\n           allChoices.push(correctChoice);\r\n           for (let i = allChoices.length - 1; i > 0; i--) {\r\n               let j = Math.floor(Math.random() * (i + 1));\r\n               let temp = allChoices[i];\r\n               allChoices[i] = allChoices[j];\r\n               allChoices[j] = temp;\r\n           };\r\n           setCurrentQuestion(question);\r\n           setAllChoices(allChoices);\r\n           setCorrectChoice(correctChoice);\r\n           }).catch(err => console.error(err))\r\n        };\r\n    \r\n    const submitAnswer = (answer) => {\r\n        if (answer === correctChoice) {\r\n            switch (currentMode) {\r\n                case \"easy\":\r\n                    setScore(score + 1);\r\n                    break;\r\n                case \"medium\":\r\n                    setScore(score + 2);;\r\n                    break;\r\n                case \"hard\":\r\n                    setScore(score + 4);;\r\n                    break;\r\n            }\r\n            getQuestion(currentMode);\r\n        } else {\r\n            gameOver(user, score);\r\n        }\r\n    }\r\n\r\n    const gameOver = (username, score) => {\r\n        axios\r\n        .post(\"http://localhost:4000/api/player\", {\r\n            username: username,\r\n            newScore: score\r\n        });\r\n        setScore(0);\r\n        setGameOn(false);\r\n        setMessage(\"Game Over! Play again?\");\r\n        setCurrentMode(\"\");\r\n        setCurrentQuestion(\"\");\r\n        setAllChoices([]);\r\n        setCorrectChoice(\"\");\r\n    }\r\n\r\n    const chooseMode = (mode) => {\r\n        setCurrentMode(mode);\r\n        getQuestion(mode);\r\n        setGameOn(true);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    const Modes = () => <div className=\"chooseMode\">\r\n            <button className=\"modeButton\"\r\n             onClick = {() => chooseMode(\"easy\")}>\r\n                Easy\r\n            </button>\r\n            <button className=\"modeButton\" \r\n            onClick = {() => chooseMode(\"medium\")}>\r\n            Medium</button>\r\n            <button className=\"modeButton\" \r\n            onClick = {() => chooseMode(\"hard\")}>\r\n            Hard</button>\r\n        </div>\r\n    \r\n    const Scoreboard = () => <div className=\"scoreboard\">\r\n        <p>Current Score: {score}</p>\r\n    </div>\r\n\r\n    return (\r\n        <div>\r\n            <h2>{message}</h2>\r\n            {!gameOn ? <Modes /> : null}\r\n            {gameOn ? <Scoreboard /> : null}\r\n            <div>\r\n                <p>{currentQuestion}</p>\r\n                <div>\r\n                    {\r\n                    allChoices.map(choice =>\r\n                        <button\r\n                        onClick={() => submitAnswer(choice)}>\r\n                            {choice}\r\n                        </button>\r\n                        )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AAAC;AAGvC,SAASC,IAAI,GAAI;EAAA;EACb,MAAMC,OAAO,GAAG,IAAIF,OAAO,EAAE;EAC7B,MAAMG,UAAU,GAAGD,OAAO,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACI,UAAU,CAACI,QAAQ,CAAC;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,oBAAoB,CAAC;EAC5D,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMuB,WAAW,GAAG,MAAMC,IAAI,IAAK;IAC/B1B,KAAK,CAACO,GAAG,CAAE,+DAA8DmB,IAAK,EAAC,CAAC,CAC/EC,IAAI,CAACC,GAAG,IAAI;MACV,MAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACD,QAAQ;MACrC,IAAIV,UAAU,GAAG,EAAE;MACnB,KAAK,MAAMY,MAAM,IAAIH,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,gBAAgB,EAAE;QAC/Cb,UAAU,CAACc,IAAI,CAACF,MAAM,CAAC;MAC3B;MACA,MAAMR,aAAa,GAAGK,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACI,aAAa;MAC/Cf,UAAU,CAACc,IAAI,CAACV,aAAa,CAAC;MAC9B,KAAK,IAAIY,CAAC,GAAGhB,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC5C,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3C,IAAIM,IAAI,GAAGtB,UAAU,CAACgB,CAAC,CAAC;QACxBhB,UAAU,CAACgB,CAAC,CAAC,GAAGhB,UAAU,CAACkB,CAAC,CAAC;QAC7BlB,UAAU,CAACkB,CAAC,CAAC,GAAGI,IAAI;MACxB;MAAC;MACDvB,kBAAkB,CAACW,QAAQ,CAAC;MAC5BT,aAAa,CAACD,UAAU,CAAC;MACzBK,gBAAgB,CAACD,aAAa,CAAC;IAC/B,CAAC,CAAC,CAACmB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACtC,CAAC;EAEL,MAAMG,YAAY,GAAIC,MAAM,IAAK;IAC7B,IAAIA,MAAM,KAAKxB,aAAa,EAAE;MAC1B,QAAQR,WAAW;QACf,KAAK,MAAM;UACPO,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;UACnB;QACJ,KAAK,QAAQ;UACTC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;UAAC;UACpB;QACJ,KAAK,MAAM;UACPC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;UAAC;UACpB;MAAM;MAEdI,WAAW,CAACV,WAAW,CAAC;IAC5B,CAAC,MAAM;MACHiC,QAAQ,CAACxC,IAAI,EAAEa,KAAK,CAAC;IACzB;EACJ,CAAC;EAED,MAAM2B,QAAQ,GAAG,CAACtC,QAAQ,EAAEW,KAAK,KAAK;IAClCrB,KAAK,CACJiD,IAAI,CAAC,kCAAkC,EAAE;MACtCvC,QAAQ,EAAEA,QAAQ;MAClBwC,QAAQ,EAAE7B;IACd,CAAC,CAAC;IACFC,QAAQ,CAAC,CAAC,CAAC;IACXV,SAAS,CAAC,KAAK,CAAC;IAChBE,UAAU,CAAC,wBAAwB,CAAC;IACpCE,cAAc,CAAC,EAAE,CAAC;IAClBE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,aAAa,CAAC,EAAE,CAAC;IACjBI,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAED,MAAM2B,UAAU,GAAIzB,IAAI,IAAK;IACzBV,cAAc,CAACU,IAAI,CAAC;IACpBD,WAAW,CAACC,IAAI,CAAC;IACjBd,SAAS,CAAC,IAAI,CAAC;IACfE,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMsC,KAAK,GAAG,mBAAM;IAAK,SAAS,EAAC,YAAY;IAAA,wBACvC;MAAQ,SAAS,EAAC,YAAY;MAC7B,OAAO,EAAI,MAAMD,UAAU,CAAC,MAAM,CAAE;MAAA,UAAC;IAEtC;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,SAAS,EAAC,YAAY;MAC9B,OAAO,EAAI,MAAMA,UAAU,CAAC,QAAQ,CAAE;MAAA,UAAC;IACjC;MAAA;MAAA;MAAA;IAAA,QAAS,eACf;MAAQ,SAAS,EAAC,YAAY;MAC9B,OAAO,EAAI,MAAMA,UAAU,CAAC,MAAM,CAAE;MAAA,UAAC;IACjC;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;EAEV,MAAME,UAAU,GAAG,mBAAM;IAAK,SAAS,EAAC,YAAY;IAAA,uBAChD;MAAA,WAAG,iBAAe,EAAChC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QAC3B;EAEN,oBACI;IAAA,wBACI;MAAA,UAAKR;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,EACjB,CAACF,MAAM,gBAAG,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG,IAAI,EAC1BA,MAAM,gBAAG,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG,IAAI,eAC/B;MAAA,wBACI;QAAA,UAAIM;MAAe;QAAA;QAAA;QAAA;MAAA,QAAK,eACxB;QAAA,UAEIE,UAAU,CAACmC,GAAG,CAACvB,MAAM,iBACjB;UACA,OAAO,EAAE,MAAMe,YAAY,CAACf,MAAM,CAAE;UAAA,UAC/BA;QAAM;UAAA;UAAA;UAAA;QAAA,QACF;MACR;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA/GQ3B,IAAI;AAAA,KAAJA,IAAI;AAkHb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}