{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\Desktop\\\\WebDev\\\\TriviaMern\\\\client\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { renderMatches } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const cookies = new Cookies();\n  const cookieData = cookies.get(\"TOKEN\");\n  const [user, setUser] = useState(cookieData.username);\n  const [gameOn, setGameOn] = useState(false);\n  const [message, setMessage] = useState(\"Choose Difficulty:\");\n  const [currentMode, setCurrentMode] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [allChoices, setAllChoices] = useState([]);\n  const [score, setScore] = useState(0);\n  const [correctChoice, setCorrectChoice] = useState(\"\");\n  const getQuestion = async mode => {\n    axios.get(`https://the-trivia-api.com/api/questions?limit=1&difficulty=${mode}`).then(res => {\n      const question = res.data[0].question;\n      let allChoices = [];\n      for (const choice of res.data[0].incorrectAnswers) {\n        allChoices.push(choice);\n      }\n      const correctChoice = res.data[0].correctAnswer;\n      allChoices.push(correctChoice);\n      for (let i = allChoices.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = allChoices[i];\n        allChoices[i] = allChoices[j];\n        allChoices[j] = temp;\n      }\n      ;\n      setCurrentQuestion(question);\n      setAllChoices(allChoices);\n      setCorrectChoice(correctChoice);\n    }).catch(err => console.error(err));\n  };\n  const submitAnswer = answer => {\n    if (answer === correctChoice) {\n      switch (this.state.setMode) {\n        case \"easy\":\n          this.setState({\n            score: this.state.score + 1\n          });\n          break;\n        case \"medium\":\n          this.setState({\n            score: this.state.score + 2\n          });\n          break;\n        case \"hard\":\n          this.setState({\n            score: this.state.score + 4\n          });\n          break;\n      }\n      getQuestion(currentMode);\n    } else {\n      gameOver(user, score);\n    }\n  };\n  const gameOver = (username, score) => {\n    axios.post(\"http://localhost:4000/api/player\", {\n      username: username,\n      newScore: score\n    });\n    setScore(0);\n    setMessage(\"Game Over! Play again?\");\n    setCurrentMode(\"\");\n    setCurrentQuestion(\"\");\n    setAllChoices([]);\n    setCorrectChoice(\"\");\n  };\n  const chooseMode = mode => {\n    setCurrentMode(mode);\n    getQuestion(mode);\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chooseMode\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modeButton\",\n        onClick: () => chooseMode(\"easy\"),\n        children: \"Easy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modeButton\",\n        onClick: () => chooseMode(\"medium\"),\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modeButton\",\n        onClick: () => chooseMode(\"hard\"),\n        children: \"Hard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"HvmZH0g977JFWA/2BaOj9I2Tfeg=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["axios","renderMatches","useState","Cookies","Game","cookies","cookieData","get","user","setUser","username","gameOn","setGameOn","message","setMessage","currentMode","setCurrentMode","currentQuestion","setCurrentQuestion","allChoices","setAllChoices","score","setScore","correctChoice","setCorrectChoice","getQuestion","mode","then","res","question","data","choice","incorrectAnswers","push","correctAnswer","i","length","j","Math","floor","random","temp","catch","err","console","error","submitAnswer","answer","state","setMode","setState","gameOver","post","newScore","chooseMode"],"sources":["C:/Users/Sean/Desktop/WebDev/TriviaMern/client/src/components/Game.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { renderMatches } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nfunction Game () {\r\n    const cookies = new Cookies();\r\n    const cookieData = cookies.get(\"TOKEN\");\r\n    const [user, setUser] = useState(cookieData.username);\r\n    const [gameOn, setGameOn] = useState(false);\r\n    const [message, setMessage] = useState(\"Choose Difficulty:\");\r\n    const [currentMode, setCurrentMode] = useState(\"\");\r\n    const [currentQuestion, setCurrentQuestion] = useState(\"\");\r\n    const [allChoices, setAllChoices] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [correctChoice, setCorrectChoice] = useState(\"\");\r\n\r\n    const getQuestion = async(mode) => {\r\n        axios.get(`https://the-trivia-api.com/api/questions?limit=1&difficulty=${mode}`)\r\n        .then(res => {\r\n           const question = res.data[0].question;\r\n           let allChoices = [];\r\n           for (const choice of res.data[0].incorrectAnswers) {\r\n               allChoices.push(choice);\r\n           }\r\n           const correctChoice = res.data[0].correctAnswer;\r\n           allChoices.push(correctChoice);\r\n           for (let i = allChoices.length - 1; i > 0; i--) {\r\n               let j = Math.floor(Math.random() * (i + 1));\r\n               let temp = allChoices[i];\r\n               allChoices[i] = allChoices[j];\r\n               allChoices[j] = temp;\r\n           };\r\n           setCurrentQuestion(question);\r\n           setAllChoices(allChoices);\r\n           setCorrectChoice(correctChoice);\r\n           }).catch(err => console.error(err))\r\n        };\r\n    \r\n    const submitAnswer = (answer) => {\r\n        if (answer === correctChoice) {\r\n            switch (this.state.setMode) {\r\n                case \"easy\":\r\n                    this.setState({score : this.state.score + 1});\r\n                    break;\r\n                case \"medium\":\r\n                    this.setState({score : this.state.score + 2});\r\n                    break;\r\n                case \"hard\":\r\n                    this.setState({score : this.state.score + 4});\r\n                    break;\r\n            }\r\n            getQuestion(currentMode);\r\n        } else {\r\n            gameOver(user, score);\r\n        }\r\n    }\r\n\r\n    const gameOver = (username, score) => {\r\n        axios\r\n        .post(\"http://localhost:4000/api/player\", {\r\n            username: username,\r\n            newScore: score\r\n        });\r\n        setScore(0);\r\n        setMessage(\"Game Over! Play again?\");\r\n        setCurrentMode(\"\");\r\n        setCurrentQuestion(\"\");\r\n        setAllChoices([]);\r\n        setCorrectChoice(\"\");\r\n    }\r\n\r\n    const chooseMode = (mode) => {\r\n        setCurrentMode(mode);\r\n        getQuestion(mode);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{message}</h2>\r\n\r\n            <div className=\"chooseMode\">\r\n                <button className=\"modeButton\" onClick = {() => chooseMode(\"easy\")}>Easy</button>\r\n                <button className=\"modeButton\" onClick = {() => chooseMode(\"medium\")}>Medium</button>\r\n                <button className=\"modeButton\" onClick = {() => chooseMode(\"hard\")}>Hard</button>\r\n            </div>\r\n            <div className=\"scoreboard\">\r\n                <p>Current Score: {score}</p>\r\n            </div>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}