{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sean\\\\Desktop\\\\WebDev\\\\TriviaMern\\\\client\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { renderMatches } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const cookies = new Cookies();\n  const cookieData = cookies.get(\"TOKEN\");\n  const [user, setUser] = useState(cookieData.username);\n  const modes = useState([\"easy\", \"medium\", \"hard\"]);\n  const [message, setMessage] = useState(\"\");\n  const [currentMode, setCurrentMode] = useState(\"\");\n  const [currentQuestion, setCurrentQuestion] = useState(\"\");\n  const [allChoices, setAllChoices] = useState([]);\n  const [score, setScore] = useState(0);\n  const [correctChoice, setCorrectChoice] = useState(\"\");\n  const getQuestion = async mode => {\n    axios.get(`https://the-trivia-api.com/api/questions?limit=1&difficulty=${mode}`).then(res => {\n      const question = res.data[0].question;\n      let allChoices = [];\n      for (const choice of res.data[0].incorrectAnswers) {\n        allChoices.push(choice);\n      }\n      const correctChoice = res.data[0].correctAnswer;\n      allChoices.push(correctChoice);\n      for (let i = allChoices.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let temp = allChoices[i];\n        allChoices[i] = allChoices[j];\n        allChoices[j] = temp;\n      }\n      ;\n      setAllChoices();\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"iS3AYiM2C1oHuw3236Q4SpnIkzg=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["axios","renderMatches","useState","Cookies","Game","cookies","cookieData","get","user","setUser","username","modes","message","setMessage","currentMode","setCurrentMode","currentQuestion","setCurrentQuestion","allChoices","setAllChoices","score","setScore","correctChoice","setCorrectChoice","getQuestion","mode","then","res","question","data","choice","incorrectAnswers","push","correctAnswer","i","length","j","Math","floor","random","temp","catch","err","console","error"],"sources":["C:/Users/Sean/Desktop/WebDev/TriviaMern/client/src/components/Game.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { renderMatches } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\n\r\nfunction Game () {\r\n    const cookies = new Cookies();\r\n    const cookieData = cookies.get(\"TOKEN\");\r\n    const [user, setUser] = useState(cookieData.username);\r\n    const modes = useState([\"easy\", \"medium\", \"hard\"]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const [currentMode, setCurrentMode] = useState(\"\");\r\n    const [currentQuestion, setCurrentQuestion] = useState(\"\");\r\n    const [allChoices, setAllChoices] = useState([]);\r\n    const [score, setScore] = useState(0);\r\n    const [correctChoice, setCorrectChoice] = useState(\"\");\r\n\r\n    const getQuestion = async(mode) => {\r\n        axios.get(`https://the-trivia-api.com/api/questions?limit=1&difficulty=${mode}`)\r\n        .then(res => {\r\n           const question = res.data[0].question;\r\n           let allChoices = [];\r\n           for (const choice of res.data[0].incorrectAnswers) {\r\n               allChoices.push(choice);\r\n           }\r\n           const correctChoice = res.data[0].correctAnswer;\r\n           allChoices.push(correctChoice);\r\n           for (let i = allChoices.length - 1; i > 0; i--) {\r\n               let j = Math.floor(Math.random() * (i + 1));\r\n               let temp = allChoices[i];\r\n               allChoices[i] = allChoices[j];\r\n               allChoices[j] = temp;\r\n           };\r\n           setAllChoices()\r\n           }).catch(err => console.error(err))\r\n        };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Game</h2>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,kBAAkB;AAAC;AAGvC,SAASC,IAAI,GAAI;EAAA;EACb,MAAMC,OAAO,GAAG,IAAIF,OAAO,EAAE;EAC7B,MAAMG,UAAU,GAAGD,OAAO,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACI,UAAU,CAACI,QAAQ,CAAC;EACrD,MAAMC,KAAK,GAAGT,QAAQ,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EAClD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMsB,WAAW,GAAG,MAAMC,IAAI,IAAK;IAC/BzB,KAAK,CAACO,GAAG,CAAE,+DAA8DkB,IAAK,EAAC,CAAC,CAC/EC,IAAI,CAACC,GAAG,IAAI;MACV,MAAMC,QAAQ,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACD,QAAQ;MACrC,IAAIV,UAAU,GAAG,EAAE;MACnB,KAAK,MAAMY,MAAM,IAAIH,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,gBAAgB,EAAE;QAC/Cb,UAAU,CAACc,IAAI,CAACF,MAAM,CAAC;MAC3B;MACA,MAAMR,aAAa,GAAGK,GAAG,CAACE,IAAI,CAAC,CAAC,CAAC,CAACI,aAAa;MAC/Cf,UAAU,CAACc,IAAI,CAACV,aAAa,CAAC;MAC9B,KAAK,IAAIY,CAAC,GAAGhB,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;QAC5C,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;QAC3C,IAAIM,IAAI,GAAGtB,UAAU,CAACgB,CAAC,CAAC;QACxBhB,UAAU,CAACgB,CAAC,CAAC,GAAGhB,UAAU,CAACkB,CAAC,CAAC;QAC7BlB,UAAU,CAACkB,CAAC,CAAC,GAAGI,IAAI;MACxB;MAAC;MACDrB,aAAa,EAAE;IACf,CAAC,CAAC,CAACsB,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACtC,CAAC;EAEL,oBACI;IAAA,uBACI;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACX;AAEd;AAAC,GArCQtC,IAAI;AAAA,KAAJA,IAAI;AAuCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}